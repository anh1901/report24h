{"version":3,"sources":["views/AdminViews/components/CategoryTables/RootCategoryTable.js","views/AdminViews/Categories/RootCategories.js"],"names":["RootCategoryTable","_useState","useState","_useState2","Object","slicedToArray","modal","setModal","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","isLoading2","setIsLoading2","_useState7","_useState8","categories","setCategories","_useState9","_useState10","deletedCategory","setDeletedCategory","_useState11","_useState12","updateType","setUpdateType","_useState13","_useState14","isTypeUpdate","setIsTypeUpdate","_useState15","_useState16","temp","setTemp","toggle","_updateCategory","asyncToGenerator","_regeneratorRuntime","mark","_callee2","id","type","param","wrap","_context2","prev","next","rootType","categoryApi","updateRoot","sent","statusCode","setVisibleModal","t0","toast","error","message","stop","apply","this","arguments","_loadCategories","_callee3","response","_context3","getAllRoot","_deleteCategory","_callee4","params","_context4","deleteRoot","useEffect","setInterval","prevTemp","loadCategories","_useState17","_useState18","details","setDetails","_useState19","_useState20","visibleModal","toggleDetails","_ref","_callee","_context","rootCategoryId","getByIdRoot","_x4","react_default","a","createElement","Fragment","Modal","isOpen","className","size","style","maxWidth","width","paddingTop","ModalHeader","ModalBody","ModalFooter","Button","color","class","role","aria-hidden","onClick","_x3","deleteCategory","FormGroup","row","Col","md","Label","for","Input","name","placeholder","onChange","e","target","value","handleTypeChange","disabled","variant","_x","_x2","updateCategory","Row","index_es","noItemsLabel","draggable","activePage","cleaner","columns","key","label","_style","_props","filter","sorter","columnFilter","columnSorter","items","itemsPerPageSelect","itemsPerPage","pagination","scopedColumns","item","_id","show_details","tableFilter","RootCategories","rootCategoryType","setRootCategoryType","createRootCategory","RootCategories_regeneratorRuntime","addRoot","handleInputChange","CategoryTables_RootCategoryTable"],"mappings":"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","file":"static/js/11.a8cff122.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"@coreui/coreui-pro/dist/css/coreui.min.css\";\r\nimport \"react-bootstrap-table/dist//react-bootstrap-table-all.min.css\";\r\nimport { CSmartTable } from \"@coreui/react-pro\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport categoryApi from \"../../../../api/categoryApi\";\r\nimport { toast } from \"react-toastify\";\r\nimport { setInterval } from \"core-js\";\r\n//\r\nconst RootCategoryTable = () => {\r\n  const [modal, setModal] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isLoading2, setIsLoading2] = useState(false);\r\n  const [categories, setCategories] = useState([]);\r\n  const [deletedCategory, setDeletedCategory] = useState(\"\");\r\n  const [updateType, setUpdateType] = useState(\"\");\r\n  const [isTypeUpdate, setIsTypeUpdate] = useState(false);\r\n  const [temp, setTemp] = useState(0);\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n  };\r\n  const handleTypeChange = (e) => {\r\n    setUpdateType(e.target.value);\r\n  };\r\n  async function updateCategory(id, type) {\r\n    setIsLoading2(true);\r\n    try {\r\n      const param = {\r\n        id: id,\r\n        rootType: updateType === null ? type : updateType,\r\n      };\r\n      const response = await categoryApi.updateRoot(param);\r\n      if (response.statusCode === 200) {\r\n        setIsLoading2(false);\r\n        setVisibleModal(false);\r\n        setUpdateType(\"\");\r\n      }\r\n    } catch (e) {\r\n      toast.error(e.message);\r\n    }\r\n  }\r\n  async function loadCategories() {\r\n    try {\r\n      const param = {};\r\n      const response = await categoryApi.getAllRoot(param);\r\n      setCategories(response);\r\n    } catch (e) {\r\n      toast.error(e.message);\r\n    }\r\n  }\r\n  async function deleteCategory(id) {\r\n    setIsLoading(true);\r\n    try {\r\n      const params = { id: id };\r\n      const response = await categoryApi.deleteRoot(params);\r\n      if (response.statusCode === 200) {\r\n        setIsLoading(false);\r\n        setModal(!modal);\r\n        setDeletedCategory(\"\");\r\n      }\r\n    } catch (e) {\r\n      toast.error(e.message);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    setInterval(() => {\r\n      setTemp((prevTemp) => prevTemp + 1);\r\n    }, 5000);\r\n  }, []);\r\n  useEffect(() => {\r\n    loadCategories();\r\n  }, [temp]);\r\n  //\r\n  const [details, setDetails] = useState(null);\r\n  const [visibleModal, setVisibleModal] = useState(false);\r\n  const columns = [\r\n    {\r\n      key: \"rootCategoryId\",\r\n      label: \"ID\",\r\n      _style: { width: \"5%\" },\r\n      _props: { className: \"fw-semibold\" },\r\n    },\r\n    {\r\n      key: \"type\",\r\n      label: \"Tên danh mục\",\r\n      _style: { width: \"20%\" },\r\n      _props: { className: \"fw-semibold\" },\r\n    },\r\n    {\r\n      key: \"show_details\",\r\n      label: \"Options\",\r\n      _style: { width: \"5%\" },\r\n      filter: false,\r\n      sorter: false,\r\n      _props: { className: \"fw-semibold\" },\r\n    },\r\n  ];\r\n\r\n  const toggleDetails = async (id) => {\r\n    setVisibleModal(!visibleModal);\r\n    try {\r\n      const param = { rootCategoryId: id };\r\n      const response = await categoryApi.getByIdRoot(param);\r\n      setDetails(response);\r\n    } catch (e) {\r\n      toast.error(e.message);\r\n    }\r\n  };\r\n  useEffect(() => {});\r\n  return (\r\n    <>\r\n      <Modal\r\n        isOpen={modal}\r\n        toggle={() => toggle()}\r\n        className=\"\"\r\n        size=\"lg\"\r\n        style={{ maxWidth: \"800px\", width: \"80%\", paddingTop: \"15rem\" }}\r\n      >\r\n        <ModalHeader className=\"bg-danger\" toggle={() => toggle()}>\r\n          Bạn chắc không?\r\n        </ModalHeader>\r\n        <ModalBody>Xóa danh mục ID: {deletedCategory} này?</ModalBody>\r\n        <ModalFooter>\r\n          {isLoading ? (\r\n            <Button color=\"primary\">\r\n              <span\r\n                class=\"spinner-border spinner-border-sm\"\r\n                role=\"status\"\r\n                aria-hidden=\"true\"\r\n              ></span>{\" \"}\r\n              Đang Xóa\r\n            </Button>\r\n          ) : (\r\n            <Button\r\n              color=\"primary\"\r\n              onClick={() => deleteCategory(deletedCategory)}\r\n            >\r\n              Xóa\r\n            </Button>\r\n          )}\r\n          <Button color=\"secondary\" onClick={() => toggle()}>\r\n            Hủy\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n      <Modal\r\n        isOpen={visibleModal}\r\n        toggle={() => (\r\n          setVisibleModal(false), setDetails(null), setIsTypeUpdate(false)\r\n        )}\r\n        className=\"\"\r\n        size=\"lg\"\r\n        style={{ maxWidth: \"800px\", width: \"80%\" }}\r\n      >\r\n        <ModalHeader\r\n          className=\"bg-primary\"\r\n          toggle={() => (setVisibleModal(false), setDetails(null))}\r\n        >\r\n          Chi tiết danh mục gốc\r\n        </ModalHeader>\r\n        {details !== null ? (\r\n          <>\r\n            <ModalBody>\r\n              <FormGroup row>\r\n                <Col md=\"3\">\r\n                  <Label for=\"location\">\r\n                    <b>ID: </b>{\" \"}\r\n                  </Label>\r\n                </Col>\r\n                <Col md=\"9\">{details.rootCategoryId}</Col>\r\n              </FormGroup>\r\n              <FormGroup row>\r\n                <Col md=\"3\">\r\n                  <Label for=\"location\">\r\n                    <b>Tên danh mục: </b>\r\n                  </Label>\r\n                </Col>\r\n                <Col md=\"8\">\r\n                  {isTypeUpdate ? (\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"type\"\r\n                      id=\"type\"\r\n                      placeholder=\"Tên danh mục gốc mới\"\r\n                      onChange={(e) => handleTypeChange(e)}\r\n                    ></Input>\r\n                  ) : (\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"type\"\r\n                      id=\"type\"\r\n                      disabled\r\n                      value={details.type}\r\n                    ></Input>\r\n                  )}\r\n                </Col>\r\n                <Col md=\"1\">\r\n                  <Button onClick={() => setIsTypeUpdate(!isTypeUpdate)}>\r\n                    <i class=\"fa fa-edit\"></i>\r\n                  </Button>\r\n                </Col>\r\n              </FormGroup>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              {isLoading2 ? (\r\n                <Button variant=\"primary\" size=\"sm\">\r\n                  <span\r\n                    class=\"spinner-border spinner-border-sm\"\r\n                    role=\"status\"\r\n                    aria-hidden=\"true\"\r\n                  ></span>{\" \"}\r\n                  Đang Cập nhật\r\n                </Button>\r\n              ) : (\r\n                <Button\r\n                  variant=\"primary\"\r\n                  size=\"sm\"\r\n                  onClick={() =>\r\n                    updateCategory(details.rootCategoryId, details.type)\r\n                  }\r\n                >\r\n                  Cập nhật\r\n                </Button>\r\n              )}\r\n            </ModalFooter>\r\n          </>\r\n        ) : (\r\n          <Row className=\"d-flex justify-content-center\">\r\n            <div class=\"spinner-border text-primary mb-5 mt-5\" role=\"status\">\r\n              <span class=\"sr-only\">Loading...</span>\r\n            </div>\r\n          </Row>\r\n        )}\r\n      </Modal>\r\n      {categories !== null && (\r\n        <CSmartTable\r\n          noItemsLabel=\"Không có dữ liệu...\"\r\n          draggable\r\n          activePage={1}\r\n          cleaner\r\n          columns={columns}\r\n          columnFilter\r\n          columnSorter\r\n          items={categories}\r\n          itemsPerPageSelect\r\n          itemsPerPage={10}\r\n          pagination\r\n          scopedColumns={{\r\n            rootCategoryId: (item) => {\r\n              return <td className=\"py-2\">{item._id + 1}</td>;\r\n            },\r\n            show_details: (item) => {\r\n              return (\r\n                <td className=\"\">\r\n                  <Row>\r\n                    <Button onClick={() => toggleDetails(item.rootCategoryId)}>\r\n                      Chi tiết\r\n                    </Button>{\" \"}\r\n                    <Button\r\n                      onClick={() => (\r\n                        toggle(), setDeletedCategory(item.rootCategoryId)\r\n                      )}\r\n                      color=\"danger\"\r\n                      className=\"ml-1\"\r\n                    >\r\n                      <icon className=\"fa fa-trash\" />\r\n                    </Button>\r\n                  </Row>\r\n                </td>\r\n              );\r\n            },\r\n          }}\r\n          tableFilter\r\n          // tableProps={{\r\n          //   hover: true,\r\n          // }}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RootCategoryTable;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n} from \"reactstrap\";\r\nimport categoryApi from \"../../../api/categoryApi\";\r\nimport RootCategoryTable from \"../components/CategoryTables/RootCategoryTable\";\r\nimport { toast } from \"react-toastify\";\r\nconst RootCategories = () => {\r\n  const [modal, setModal] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [rootCategoryType, setRootCategoryType] = useState(\"\");\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n  };\r\n  const handleInputChange = (e) => {\r\n    setRootCategoryType(e.target.value);\r\n  };\r\n  const createRootCategory = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const params = { rootType: rootCategoryType };\r\n      const response = await categoryApi.addRoot(params);\r\n      if (response.statusCode === 200) {\r\n        setIsLoading(false);\r\n        setModal(!modal);\r\n      }\r\n    } catch (e) {\r\n      toast.error(e.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"animated fadeIn pl-3 pr-3 pt-2\">\r\n      <Modal\r\n        isOpen={modal}\r\n        toggle={() => toggle()}\r\n        className=\"\"\r\n        size=\"lg\"\r\n        style={{ maxWidth: \"800px\", width: \"80%\", paddingTop: \"15rem\" }}\r\n      >\r\n        <ModalHeader className=\"bg-primary\" toggle={() => toggle()}>\r\n          Tạo danh mục gốc mới\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <FormGroup row>\r\n            <Col md=\"3\">\r\n              <Label for=\"location\">\r\n                <b>Tên danh mục gốc </b>{\" \"}\r\n              </Label>\r\n            </Col>\r\n            <Col md=\"9\">\r\n              <Input\r\n                type=\"text\"\r\n                name=\"type\"\r\n                id=\"type\"\r\n                value={rootCategoryType}\r\n                onChange={(e) => handleInputChange(e)}\r\n                placeholder=\"Tên danh mục\"\r\n              ></Input>\r\n            </Col>\r\n          </FormGroup>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          {isLoading ? (\r\n            <Button color=\"primary\">\r\n              <span\r\n                class=\"spinner-border spinner-border-sm\"\r\n                role=\"status\"\r\n                aria-hidden=\"true\"\r\n              ></span>{\" \"}\r\n              Đang Tạo\r\n            </Button>\r\n          ) : (\r\n            <Button color=\"primary\" onClick={() => createRootCategory()}>\r\n              Tạo\r\n            </Button>\r\n          )}\r\n          <Button color=\"secondary\" onClick={() => toggle()}>\r\n            Hủy\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n      <Button onClick={() => toggle()} color=\"primary\" className=\"mb-3\">\r\n        <i className=\"icon-plus\"> </i>\r\n        <b>Tạo danh mục gốc</b>\r\n      </Button>\r\n      <RootCategoryTable />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RootCategories;\r\n"],"sourceRoot":""}