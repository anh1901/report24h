{"version":3,"sources":["views/AdminViews/Task/Boards/components/BoardTitle.js","views/AdminViews/Task/Boards/components/BoardModal.js","api/boardApi.js","views/AdminViews/Task/Boards/Boards.js"],"names":["BoardTitle","_ref","title","date","managerId","handleBoardClick","addition","settingType","react_default","a","createElement","role","tabIndex","onKeyDown","onClick","style","height","background","className","concat","Fragment","moment","format","BoardModal","props","closeModal","action","visible","_useState","useState","_useState2","Object","slicedToArray","boardTitle","setBoardTitle","_useState3","_useState4","loading","setLoading","user_info","localStorage","getItem","isEmptyText","text","trim","handleCreateBoard","asyncToGenerator","_regeneratorRuntime","mark","_callee","event","wrap","_context","prev","next","preventDefault","abrupt","boardName","manager_Id","JSON","parse","email","stop","_x","apply","this","arguments","Modal","isOpen","toggle","size","maxWidth","width","paddingTop","ModalHeader","ModalBody","onSubmit","Input","placeholder","onChange","target","value","Button","type","disabled","boardApi","getAll","params","axiosClient","get","addBoard","post","Boards","boards","setBoards","bgColors","_useState5","_useState6","modalVisible","setModalVisible","_useState7","_useState8","settings","setSettings","useEffect","fetchBoards","Boards_regeneratorRuntime","response","sent","map","board","id","boardId","find","item","name","push","color","Math","floor","random","toString","color2","t0","toast","error","message","_ref2","_callee2","_context2","OverlayTrigger","trigger","placement","rootClose","data-trigger","onExit","on","overlay","Popover","Header","Body","length","filter","isDelete","BoardTitle_BoardTitle","key","createTime","window","location","href","BoardModal_BoardModal"],"mappings":"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","file":"static/js/17.ebceace1.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\n\r\nimport moment from \"moment\";\r\nimport \"moment/locale/vi\";\r\n\r\nexport const BoardTitle = ({\r\n  title,\r\n  date,\r\n  managerId,\r\n  handleBoardClick,\r\n  addition,\r\n  settingType,\r\n}) => {\r\n  return (\r\n    <div\r\n      role=\"button\"\r\n      tabIndex=\"0\"\r\n      onKeyDown={() => {}}\r\n      onClick={() => handleBoardClick()}\r\n      style={{\r\n        height: \"8rem\",\r\n        background:\r\n          !addition &&\r\n          (settingType === \"Delete\"\r\n            ? `linear-gradient(to right,#FE0944,#FEAE96)`\r\n            : settingType === \"Renamed\"\r\n            ? `linear-gradient(to right,#009FFD,#2A2A72)`\r\n            : settingType === \"None\"\r\n            ? `linear-gradient(to right,#D65BCA,#1FD1F9)`\r\n            : `linear-gradient(to right,#D65BCA,#1FD1F9)`),\r\n      }}\r\n      className={`title rounded p-3 font-weight-bold mb-2  ${\r\n        addition\r\n          ? `bg-secondary text-white d-flex justify-content-between`\r\n          : `bg-opacity-25 text-white`\r\n      }`}\r\n    >\r\n      <div className={addition ? \"m-auto\" : \"\"}>\r\n        {addition && <i className=\"fa fa-plus\"></i>}{\" \"}\r\n        <span\r\n          className={`h3 ${addition ? \"\" : \"d-flex justify-content-between\"}`}\r\n        >\r\n          <span>{title}</span>\r\n        </span>\r\n        {!addition && (\r\n          <>\r\n            <div className=\"h6 text-muted\">\r\n              {moment(date).format(\"MMM Do YYYY\")}\r\n            </div>\r\n            <div>Quản lý: {managerId}</div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nBoardTitle.propTypes = {\r\n  settingType: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  date: PropTypes.string.isRequired,\r\n  bgColors: PropTypes.string.isRequired,\r\n  managerId: PropTypes.string.isRequired,\r\n  handleBoardClick: PropTypes.func,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Input, Modal, ModalBody, ModalHeader } from \"reactstrap\";\r\nexport const BoardModal = (props) => {\r\n  const { closeModal, action, visible } = props;\r\n  const [boardTitle, setBoardTitle] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const user_info = localStorage.getItem(\"user_info\");\r\n  const isEmptyText = (text) => !text || !text.trim();\r\n\r\n  const handleCreateBoard = async (event) => {\r\n    setLoading(true);\r\n    event.preventDefault();\r\n    if (isEmptyText(boardTitle)) {\r\n      return;\r\n    }\r\n    await action({\r\n      boardName: boardTitle,\r\n      manager_Id: JSON.parse(user_info).email,\r\n    });\r\n    setBoardTitle(\"\");\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={visible}\r\n      toggle={closeModal}\r\n      className=\"\"\r\n      size=\"lg\"\r\n      style={{ maxWidth: \"400px\", width: \"40%\", paddingTop: \"15rem\" }}\r\n    >\r\n      <ModalHeader className=\"bg-primary\" toggle={closeModal}>\r\n        Tạo bảng công việc mới\r\n      </ModalHeader>\r\n      <ModalBody>\r\n        <form className=\"w-100\" onSubmit={(event) => handleCreateBoard(event)}>\r\n          <Input\r\n            className=\"mb-3\"\r\n            placeholder=\"Tên bảng\"\r\n            onChange={(event) => setBoardTitle(event.target.value)}\r\n            value={boardTitle}\r\n          />\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={(event) => handleCreateBoard(event)}\r\n            loading={loading}\r\n            disabled={isEmptyText(boardTitle)}\r\n          >\r\n            Tạo\r\n          </Button>\r\n        </form>\r\n      </ModalBody>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nBoardModal.propTypes = {\r\n  closeModal: PropTypes.func.isRequired,\r\n  action: PropTypes.func.isRequired,\r\n  visible: PropTypes.bool.isRequired,\r\n};\r\n","import axiosClient from \"./axiosClient\";\r\n\r\nclass BoardApi {\r\n  getAll = (params) => {\r\n    const url = \"/Board\";\r\n    return axiosClient.get(url, params);\r\n  };\r\n  addBoard = (params) => {\r\n    const url = \"/Board\";\r\n    return axiosClient.post(url, params);\r\n  };\r\n}\r\nconst boardApi = new BoardApi();\r\nexport default boardApi;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { BoardTitle } from \"./components/BoardTitle\";\r\nimport { BoardModal } from \"./components/BoardModal\";\r\nimport boardApi from \"../../../../api/boardApi\";\r\nimport { OverlayTrigger, Popover } from \"react-bootstrap\";\r\nimport { toast } from \"react-toastify\";\r\nconst Boards = () => {\r\n  const [boards, setBoards] = useState([]);\r\n  const [bgColors, setBgColors] = useState([]);\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [settings, setSettings] = useState(\"None\");\r\n  const randomColor = (id) => {\r\n    if (!bgColors.find((item) => item.name === id)) {\r\n      bgColors.push({\r\n        name: id,\r\n        color: \"#\" + Math.floor(Math.random() * 16777215).toString(16),\r\n        color2: \"#\" + Math.floor(Math.random() * 16777215).toString(16),\r\n      });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    // setLoading(true);\r\n    fetchBoards();\r\n  }, [boards]);\r\n\r\n  const fetchBoards = async () => {\r\n    try {\r\n      const params = {};\r\n      const response = await boardApi.getAll(params);\r\n      response.map((board) => randomColor(board.boardId));\r\n      setBoards(response);\r\n    } catch (e) {\r\n      toast.error(e.message);\r\n    }\r\n  };\r\n\r\n  const addBoard = async (board) => {\r\n    try {\r\n      const response = await boardApi.addBoard(board);\r\n    } catch (e) {\r\n      toast.error(e.message);\r\n    }\r\n    setModalVisible(false);\r\n  };\r\n\r\n  // const starredBoards = boards.filter((board) => board.starred);\r\n  return (\r\n    <div className=\"pt-16 px-2 mx-3\">\r\n      <div className=\"mb-3 font-weight-bold h3\">\r\n        <i className=\"fa fa-light fa-star mr-2\" /> Tất cả bảng công việc{\"  \"}\r\n        <OverlayTrigger\r\n          trigger={[\"click\"]}\r\n          placement=\"right\"\r\n          rootClose\r\n          data-trigger=\"focus\"\r\n          onExit={() => setSettings(\"None\")}\r\n          on\r\n          overlay={\r\n            <Popover id=\"popover-contained\">\r\n              <Popover.Header className=\"font-weight-bold border-bottom h4\">\r\n                Tùy chỉnh\r\n              </Popover.Header>\r\n              <Popover.Body>\r\n                <div\r\n                  className=\"setting-option h5\"\r\n                  onClick={() => setSettings(\"Renamed\")}\r\n                >\r\n                  Sửa tên\r\n                </div>\r\n                <div\r\n                  className=\"setting-option h5 text-danger\"\r\n                  onClick={() => setSettings(\"Delete\")}\r\n                >\r\n                  Xóa\r\n                </div>\r\n              </Popover.Body>\r\n            </Popover>\r\n          }\r\n        >\r\n          <i className=\"fa fa-solid fa-gear setting\"></i>\r\n        </OverlayTrigger>\r\n      </div>\r\n      {settings === \"Renamed\" ? (\r\n        <div className=\"row px-1\">\r\n          {boards.length !== 0 &&\r\n            boards\r\n              .filter((board) => board.isDelete === false)\r\n              .map((board) => (\r\n                <div className=\"col-3 mb-2 board\">\r\n                  <BoardTitle\r\n                    key={board.boardId}\r\n                    title={board.boardName}\r\n                    date={board.createTime}\r\n                    managerId={board.managerId}\r\n                    addition={false}\r\n                    settingType={\"Renamed\"}\r\n                    handleBoardClick={() => {}}\r\n                  />\r\n                </div>\r\n              ))}\r\n        </div>\r\n      ) : settings === \"Delete\" ? (\r\n        <div className=\"row px-1\">\r\n          {boards.length !== 0 &&\r\n            boards\r\n              .filter((board) => board.isDelete === false)\r\n              .map((board) => (\r\n                <div className=\"col-3 mb-2 board\">\r\n                  <BoardTitle\r\n                    key={board.boardId}\r\n                    title={board.boardName}\r\n                    date={board.createTime}\r\n                    managerId={board.managerId}\r\n                    addition={false}\r\n                    settingType={\"Delete\"}\r\n                    handleBoardClick={() => {}}\r\n                  />\r\n                </div>\r\n              ))}\r\n        </div>\r\n      ) : (\r\n        <div className=\"row px-1\">\r\n          {boards.length !== 0 &&\r\n            boards\r\n              .filter((board) => board.isDelete === false)\r\n              .map((board) => (\r\n                <div className=\"col-3 mb-2 board\">\r\n                  <BoardTitle\r\n                    key={board.boardId}\r\n                    title={board.boardName}\r\n                    date={board.createTime}\r\n                    managerId={board.managerId}\r\n                    addition={false}\r\n                    bgColors={bgColors.filter(\r\n                      (color) => color.name === board.boardId\r\n                    )}\r\n                    handleBoardClick={() =>\r\n                      (window.location.href = `tasks?id=${board.boardId}`)\r\n                    }\r\n                  />\r\n                </div>\r\n              ))}\r\n          <div className=\"col-3 mb-2\">\r\n            <BoardTitle\r\n              title=\"Tạo thêm bảng\"\r\n              addition={true}\r\n              handleBoardClick={() => setModalVisible(!modalVisible)}\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <BoardModal\r\n        action={addBoard}\r\n        closeModal={() => setModalVisible(!modalVisible)}\r\n        visible={modalVisible}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default Boards;\r\n"],"sourceRoot":""}