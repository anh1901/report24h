{"version":3,"sources":["views/AdminViews/Task/components/EditorManagerTaskComponents/ListItem.js","views/AdminViews/Task/components/EditorManagerTaskComponents/DragableTask.js","views/AdminViews/Task/Tasks/Tasks.js"],"names":["CardHeader","styled","div","_templateObject","Object","taggedTemplateLiteral","CardBody","_templateObject2","Author","_templateObject3","CardFooter","_templateObject4","DragItem","_templateObject5","ListItem","_ref","item","index","loadTask","_useState","useState","_useState2","slicedToArray","details","setDetails","_useState3","_useState4","reportDetails","setReportDetails","_useState5","_useState6","visibleModal","setVisibleModal","_useState7","_useState8","visibleReportModal","setVisibleReportModal","_useState9","_useState10","visiblePreviewModal","setVisiblePreviewModal","_useState11","_useState12","editedDescription","setEditedDescription","_useState13","_useState14","categoryList","setCategoryList","viewDetails","_ref2","asyncToGenerator","_regeneratorRuntime","mark","_callee","id","params","response","wrap","_context","prev","next","taskApi","getById","sent","t0","toast","error","message","stop","_x","apply","this","arguments","_loadCategory","_callee4","_context4","categoryApi","getAllSub","toggleReportDetails","_ref3","_callee2","param","metaDescription","description","_context2","reportApi","find","JSON","stringify","replace","substring","length","_x2","publicPost","_ref4","_callee3","taskId","params2","_context3","postId","status","updateStatus","postApi","editStatus","_x3","_x4","useEffect","loadCategory","react_default","a","createElement","Fragment","Modal","isOpen","toggle","className","size","style","maxWidth","width","ModalHeader","ModalBody","Row","Col","FormGroup","row","md","Label","for","editorId","moment","createTime","format","deadLineTime","reportTasks","map","report","Button","color","onClick","reportId","onClosed","location","userId","timeFraud","categoryId","c","subCategory","staffId","esm","content","allowAttributes","allowElements","filter","img","type","CreatePost","media","includes","preview","video","height","controls","objectFit","autoPlay","loop","src","posts","post","Badge","bg","minWidth","marginTop","fullScreen","backgroundColor","react","BreadCrumb","title","category","FontAwesome","name","subTitle","image","alt","marginLeft","marginRight","display","class","react_router_dom","to","parse","localStorage","getItem","accountInfo","username","publicTime","updateTime","toLocaleUpperCase","whiteSpace","Comments","ModalFooter","role","react_beautiful_dnd_esm","draggableId","provided","snapshot","assign","ref","innerRef","draggableProps","dragHandleProps","textOverflow","overflow","padding","textTransform","duration","diff","asDays","Math","abs","floor","asHours","asMinutes","asSeconds","build_default","radius","Track","DragableTask_templateObject","Tick","DragableTask_templateObject2","Checkbutton","button","DragableTask_templateObject3","TickLabel","DragableTask_templateObject4","Segment","DragableTask_templateObject5","props","Handle","_templateObject6","active","ColumnHeader","_templateObject7","StatusColumn","_templateObject8","DroppableStyles","_templateObject9","CreateTaskButton","_templateObject10","EmptyList","_templateObject11","columns","key","label","sorter","_style","_props","shortcuts","Today","Yesterday","subtract","Clear","DraggableTask","prefix","tasks","visibleModal2","setVisibleModal2","visibleModal3","setVisibleModal3","selected","setSelected","time","setTime","reportIdList","setReportIdList","_useState15","_useState16","reports","setReports","_useState17","_useState18","_useState19","_useState20","editors","setEditors","_useState21","_useState22","_useState23","_useState24","setDescription","_useState25","_useState26","isLoading","setIsLoading","_useState27","_useState28","values","setValues","_useRanger","useRanger","min","max","stepSize","onChange","getTrackProps","ticks","segments","handles","DragableTask_regeneratorRuntime","_autoReviewTask","_callee5","_context5","percent","console","log","taskReviewFilter","success","_loadEditors","_callee6","_context6","userApi","getAll","user","roleId","editor","push","specializeNavigation","undefined","workLoad","value","email","es_Badge","pill","paddingTop","_loadReports","_callee7","_context7","getByStatus","toggleDetails","_description","createTask","boardId","reportID","editorID","updateReportEditor","create","openCreateModalOpen","loadEditors","openSelectReport","loadReports","statusName","autoReviewTask","index_es","noItemsLabel","activePage","clickableRows","columnFilter","columnSorter","items","itemsPerPageSelect","itemsPerPage","pagination","scopedColumns","_id","blockList","noHtml","show_details","tableProps","hover","rows","e","target","placeholder","minLength","maxLength","styles","react_select_esm","options","option","defaultValue","rc_datetime_picker_cjs","minDate","readOnly","aria-hidden","_ref5","getTickProps","_ref6","i","getSegmentProps","_ref7","getHandleProps","appearance","border","background","outline","droppableId","concat","droppableProps","task","EditorManagerTaskComponents_ListItem","DragDropContextContainer","Tasks_templateObject","ListGrid","Tasks_templateObject2","statusList","Tasks","setTasks","setTask","search","urlParams","URLSearchParams","get","Tasks_regeneratorRuntime","BoardId","sort","b","reverse","abortTask","resetTask","_params","_response","add","onDragEnd","result","_params2","destination","abrupt","temp","setTemp","setInterval","prevTemp","listKey","DragableTask"],"mappings":"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","file":"static/js/19.10652392.chunk.js","sourcesContent":["import { Draggable } from \"react-beautiful-dnd\";\r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/vi\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  FormGroup,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport taskApi from \"../../../../../api/TaskApi\";\r\nimport { Markup } from \"interweave\";\r\nimport reportApi from \"../../../../../api/reportApi\";\r\nimport LetteredAvatar from \"react-lettered-avatar\";\r\nimport { Badge } from \"react-bootstrap\";\r\nimport postApi from \"../../../../../api/postApi\";\r\nimport { ImgUpload, UploadContainer } from \"../../../Posts/CreatePost\";\r\nimport categoryApi from \"../../../../../api/categoryApi\";\r\nimport BreadCrumb from \"../../../../../components/BreadCrumb\";\r\nimport FontAwesome from \"../../../../../components/uiStyle/FontAwesome\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Comments } from \"../../../../UserViews/Post/components/Comments\";\r\nimport { toast } from \"react-toastify\";\r\nconst CardHeader = styled.div`\r\n  font-weight: 1000;\r\n  font-size: 16px;\r\n  font-family: \"Times New Roman\", Times, serif;\r\n`;\r\nconst CardBody = styled.div`\r\n  align-items: left;\r\n`;\r\nconst Author = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  font-family: \"Times New Roman\", Times, serif;\r\n`;\r\nconst CardFooter = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst DragItem = styled.div`\r\n  padding: 10px;\r\n  border-radius: 6px;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\r\n  background: white;\r\n  margin: 0 0 8px 0;\r\n  display: grid;\r\n  grid-gap: 5px;\r\n  flex-direction: column;\r\n  margin-top: 10px;\r\n`;\r\nconst ListItem = ({ item, index, loadTask }) => {\r\n  const [details, setDetails] = useState(null);\r\n  const [reportDetails, setReportDetails] = useState(null);\r\n  const [visibleModal, setVisibleModal] = useState(false);\r\n  const [visibleReportModal, setVisibleReportModal] = useState(false);\r\n  const [visiblePreviewModal, setVisiblePreviewModal] = useState(false);\r\n  const [editedDescription, setEditedDescription] = useState(null);\r\n  const [categoryList, setCategoryList] = useState([]);\r\n  //\r\n  const viewDetails = async (id) => {\r\n    setVisibleModal(!visibleModal);\r\n    try {\r\n      const params = { id: id };\r\n      const response = await taskApi.getById(params);\r\n      setDetails(response);\r\n    } catch (e) {\r\n      toast.error(e.message);\r\n    }\r\n  };\r\n  async function loadCategory() {\r\n    try {\r\n      const params = {};\r\n      const response = await categoryApi.getAllSub(params);\r\n      setCategoryList(response);\r\n    } catch (e) {\r\n      toast.error(e.message);\r\n    }\r\n  }\r\n  const toggleReportDetails = async (id) => {\r\n    setVisibleReportModal(!visibleReportModal);\r\n    try {\r\n      const param = { id: id };\r\n      const response = await reportApi.find(param);\r\n      const metaDescription = JSON.stringify(response.description)\r\n        .replace(\r\n          \"<img\",\r\n          '<img style=\"width:55rem;height:30rem;padding-left:2rem;padding-right:2rem\"'\r\n        )\r\n        .replace(\r\n          \"<iframe\",\r\n          '<iframe style=\"width:55rem;height:30rem;padding-left:2rem;padding-right:2rem\"'\r\n        )\r\n        .replace(/\\\\/g, \"\");\r\n      const description = metaDescription.substring(\r\n        1,\r\n        metaDescription.length - 1\r\n      );\r\n      setEditedDescription(description);\r\n      setReportDetails(response);\r\n    } catch (e) {\r\n      toast.error(e.message);\r\n    }\r\n  };\r\n  const publicPost = async (id, taskId) => {\r\n    setVisibleModal(!visibleModal);\r\n    try {\r\n      const params = {\r\n        postId: id,\r\n        status: 3,\r\n      };\r\n      const params2 = {\r\n        taskId: taskId,\r\n        status: 4,\r\n        postId: id,\r\n      };\r\n      await taskApi.updateStatus(params2);\r\n      await postApi.editStatus(params);\r\n      loadTask();\r\n    } catch (e) {\r\n      toast.error(e.message);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    loadCategory();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Modal\r\n        isOpen={visibleModal}\r\n        toggle={() => (setVisibleModal(false), setDetails(null))}\r\n        className=\"\"\r\n        size=\"lg\"\r\n        style={{ maxWidth: \"700px\", width: \"80%\" }}\r\n      >\r\n        <ModalHeader\r\n          className=\"bg-primary\"\r\n          toggle={() => (setVisibleModal(false), setDetails(null))}\r\n        >\r\n          Chi tiết công việc\r\n        </ModalHeader>\r\n        {details !== null ? (\r\n          <>\r\n            <ModalBody>\r\n              <Row>\r\n                <Col>\r\n                  <FormGroup row>\r\n                    <Col md=\"2\">\r\n                      <Label for=\"file\">\r\n                        <b>Miêu tả: </b>\r\n                      </Label>\r\n                    </Col>\r\n                    <Col md=\"10\">\r\n                      <div className=\"row pl-1\">{details.description}</div>\r\n                    </Col>\r\n                  </FormGroup>\r\n                  <FormGroup row>\r\n                    <Col md=\"2\">\r\n                      <Label for=\"file\">\r\n                        <b>Người được phân công: </b>\r\n                      </Label>\r\n                    </Col>\r\n                    <Col md=\"10\">\r\n                      <div className=\"row pl-1\">{details.editorId}</div>\r\n                    </Col>\r\n                  </FormGroup>\r\n                  <FormGroup row>\r\n                    <Col md=\"2\">\r\n                      <Label for=\"file\">\r\n                        <b>Tạo lúc: </b>\r\n                      </Label>\r\n                    </Col>\r\n                    <Col md=\"4\">\r\n                      <div className=\"row pl-1\">\r\n                        {moment(details.createTime).format(\r\n                          \"DD-MM-YYYY HH:mm:ss\"\r\n                        )}\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"2\">\r\n                      <Label for=\"file\">\r\n                        <b>Hạn chót: </b>\r\n                      </Label>\r\n                    </Col>\r\n                    <Col md=\"4\">\r\n                      <div className=\"row pl-1\">\r\n                        {moment(details.deadLineTime).format(\r\n                          \"DD-MM-YYYY HH:mm:ss\"\r\n                        )}\r\n                      </div>\r\n                    </Col>\r\n                  </FormGroup>\r\n                  <FormGroup row>\r\n                    <Col md=\"4\">\r\n                      <Label for=\"file\">\r\n                        <b>Báo cáo đính kèm: </b>\r\n                      </Label>\r\n                    </Col>\r\n                    <Col md=\"8\">\r\n                      <div className=\"row pl-1\">\r\n                        {details.reportTasks.length !== 0\r\n                          ? details.reportTasks.map((report) => (\r\n                              <div className=\"pb-2\">\r\n                                <Button\r\n                                  color=\"link\"\r\n                                  onClick={() =>\r\n                                    toggleReportDetails(report.reportId)\r\n                                  }\r\n                                >\r\n                                  Xem chi tiết báo cáo ID:{\" \"}\r\n                                  <b>{report.reportId}</b>\r\n                                </Button>\r\n                              </div>\r\n                            ))\r\n                          : \"Không có báo cáo đính kèm\"}\r\n                        {reportDetails !== null && (\r\n                          <Modal\r\n                            size=\"lg\"\r\n                            style={{ maxWidth: \"900px\", width: \"80%\" }}\r\n                            isOpen={visibleReportModal}\r\n                            toggle={() => (\r\n                              setVisibleReportModal(false),\r\n                              setReportDetails(null)\r\n                            )}\r\n                            onClosed={() => (\r\n                              setVisibleReportModal(false),\r\n                              setReportDetails(null)\r\n                            )}\r\n                          >\r\n                            <ModalHeader\r\n                              className=\"bg-primary\"\r\n                              toggle={() => (\r\n                                setVisibleReportModal(false),\r\n                                setReportDetails(null)\r\n                              )}\r\n                            >\r\n                              Chi tiết báo cáo\r\n                            </ModalHeader>\r\n                            <ModalBody>\r\n                              <FormGroup row>\r\n                                <Col md=\"2\">\r\n                                  <Label for=\"location\">\r\n                                    <b>Địa điểm:</b>{\" \"}\r\n                                  </Label>\r\n                                </Col>\r\n                                <Col md=\"4\">{reportDetails.location}</Col>\r\n                                <Col md=\"2\">\r\n                                  <Label for=\"userId\">\r\n                                    <b>Người gửi: </b>{\" \"}\r\n                                  </Label>\r\n                                </Col>\r\n                                <Col md=\"4\">\r\n                                  {reportDetails.userId === null\r\n                                    ? \"Không có\"\r\n                                    : reportDetails.userId}\r\n                                </Col>\r\n                              </FormGroup>\r\n                              <FormGroup row>\r\n                                <Col md=\"2\">\r\n                                  <Label for=\"timeFraud\">\r\n                                    <b> Thời gian vụ việc: </b>\r\n                                  </Label>\r\n                                </Col>\r\n                                <Col md=\"4\">{reportDetails.timeFraud}</Col>\r\n                                <Col md=\"2\">\r\n                                  <Label for=\"createTime\">\r\n                                    <b>Thời gian viết: </b>\r\n                                  </Label>\r\n                                </Col>\r\n                                <Col md=\"4\">{reportDetails.createTime}</Col>\r\n                              </FormGroup>\r\n                              <FormGroup row>\r\n                                <Col md=\"2\">\r\n                                  <Label for=\"category\">\r\n                                    {\" \"}\r\n                                    <b>Phân loại: </b>\r\n                                  </Label>\r\n                                </Col>\r\n                                <Col md=\"4\">\r\n                                  {reportDetails.categoryId === 1\r\n                                    ? \"Khác\"\r\n                                    : categoryList.find(\r\n                                        (c) =>\r\n                                          c.categoryId ===\r\n                                          reportDetails.categoryId\r\n                                      ) &&\r\n                                      categoryList.find(\r\n                                        (c) =>\r\n                                          c.categoryId ===\r\n                                          reportDetails.categoryId\r\n                                      ).subCategory}\r\n                                </Col>\r\n                                <Col md=\"2\">\r\n                                  <Label for=\"staffId\">\r\n                                    <b>Người xác nhận: </b>\r\n                                  </Label>\r\n                                </Col>\r\n                                <Col md=\"4\">\r\n                                  {reportDetails.staffId === null\r\n                                    ? \"Không có\"\r\n                                    : reportDetails.staffId}\r\n                                </Col>\r\n                              </FormGroup>\r\n                              <FormGroup row>\r\n                                <Col md=\"3\">\r\n                                  <Label for=\"description\">\r\n                                    <b>Chi tiết: </b>\r\n                                  </Label>\r\n                                </Col>\r\n                                <Col md=\"12\">\r\n                                  <Markup\r\n                                    content={editedDescription}\r\n                                    allowAttributes\r\n                                    allowElements\r\n                                  />\r\n                                </Col>\r\n                              </FormGroup>\r\n                              {/* File đính kèm */}\r\n                              <FormGroup row>\r\n                                <Col md=\"12\">\r\n                                  <Label for=\"description\">\r\n                                    <b>Ảnh đính kèm: </b>\r\n                                  </Label>\r\n                                </Col>\r\n\r\n                                {reportDetails.reportDetails.length > 0 &&\r\n                                  (reportDetails.reportDetails.filter(\r\n                                    (img) => img.type === \"Image\"\r\n                                  ).length > 0\r\n                                    ? reportDetails.reportDetails\r\n                                        .filter((img) => img.type === \"Image\")\r\n                                        .map((img) => (\r\n                                          <>\r\n                                            <Col md=\"2\">\r\n                                              <FormGroup>\r\n                                                <UploadContainer>\r\n                                                  {img.media.includes(\r\n                                                    \"http\"\r\n                                                  ) ? (\r\n                                                    <ImgUpload\r\n                                                      preview={img.media}\r\n                                                    />\r\n                                                  ) : (\r\n                                                    <>\r\n                                                      <ImgUpload />\r\n                                                    </>\r\n                                                  )}\r\n                                                </UploadContainer>\r\n                                              </FormGroup>\r\n                                            </Col>\r\n                                          </>\r\n                                        ))\r\n                                    : \"Không có ảnh đính kèm\")}\r\n                              </FormGroup>\r\n                              <FormGroup row>\r\n                                <Col md=\"12\">\r\n                                  <Label for=\"description\">\r\n                                    <b>Video đính kèm: </b>\r\n                                  </Label>\r\n                                </Col>\r\n                                {reportDetails.reportDetails.length > 0 &&\r\n                                  (reportDetails.reportDetails.filter(\r\n                                    (video) => video.type === \"Video\"\r\n                                  ).length > 0\r\n                                    ? reportDetails.reportDetails\r\n                                        .filter(\r\n                                          (video) => video.type === \"Video\"\r\n                                        )\r\n                                        .map((video) => (\r\n                                          <Col md=\"12\">\r\n                                            {video.media.includes(\"http\") ? (\r\n                                              <label for=\"videos\">\r\n                                                <video\r\n                                                  width=\"400\"\r\n                                                  height=\"150\"\r\n                                                  controls\r\n                                                  style={{\r\n                                                    height: \"200px\",\r\n                                                    objectFit: \"contain\",\r\n                                                  }}\r\n                                                  autoPlay\r\n                                                  loop\r\n                                                >\r\n                                                  <source src={video.media} />\r\n                                                </video>\r\n                                              </label>\r\n                                            ) : (\r\n                                              <span className=\"text-muted\">\r\n                                                Không có video\r\n                                              </span>\r\n                                            )}\r\n                                          </Col>\r\n                                        ))\r\n                                    : \"Không có video đính kèm\")}\r\n                              </FormGroup>\r\n                            </ModalBody>\r\n                          </Modal>\r\n                        )}\r\n                      </div>\r\n                    </Col>\r\n                  </FormGroup>\r\n                  {(details.status === \"Review\" ||\r\n                    details.status === \"Finish\" ||\r\n                    details.status === \"UnFinished\") && (\r\n                    <FormGroup row>\r\n                      <Col md=\"4\">\r\n                        <Label for=\"file\">\r\n                          <b>Bài viết đính kèm: </b>\r\n                        </Label>\r\n                      </Col>\r\n                      <Col md=\"8\">\r\n                        <div className=\"row pl-1\">\r\n                          {details.posts.length !== 0\r\n                            ? details.posts.map((post) => (\r\n                                <div className=\"pb-2\">\r\n                                  <Button\r\n                                    color=\"link\"\r\n                                    onClick={() => setVisiblePreviewModal(true)}\r\n                                  >\r\n                                    Xem bài viết{\" \"}\r\n                                  </Button>\r\n                                  {item.posts.length !== 0 &&\r\n                                    (item.posts[0].status === \"Public\" ? (\r\n                                      <span>\r\n                                        <Badge bg=\"success\">\r\n                                          Bài viết đã đăng{\" \"}\r\n                                          <i className=\"fa fa-check\" />\r\n                                        </Badge>\r\n                                      </span>\r\n                                    ) : item.posts[0].status === \"Hidden\" ? (\r\n                                      <span>\r\n                                        <Badge bg=\"info\">\r\n                                          Bài viết đã duyệt{\" \"}\r\n                                          <i className=\"fa fa-exclamation\" />\r\n                                        </Badge>\r\n                                      </span>\r\n                                    ) : (\r\n                                      <span>\r\n                                        <Badge bg=\"warning\">\r\n                                          Bài viết chưa duyệt{\" \"}\r\n                                          <i className=\"fa fa-exclamation\" />\r\n                                        </Badge>\r\n                                      </span>\r\n                                    ))}\r\n                                </div>\r\n                              ))\r\n                            : \"Không có bài viết đính kèm\"}\r\n                          {/* Load post preview */}\r\n                          {details.posts.length !== 0 && (\r\n                            <Modal\r\n                              size=\"lg\"\r\n                              style={{\r\n                                minWidth: \"100vw\",\r\n                                width: \"100%\",\r\n                                marginTop: 0,\r\n                              }}\r\n                              fullScreen\r\n                              isOpen={visiblePreviewModal}\r\n                              toggle={() => setVisiblePreviewModal(false)}\r\n                              onClosed={() => setVisiblePreviewModal(false)}\r\n                            >\r\n                              <ModalHeader\r\n                                className=\"bg-primary\"\r\n                                toggle={() => setVisiblePreviewModal(false)}\r\n                              >\r\n                                Bản xem thử\r\n                              </ModalHeader>\r\n                              <ModalBody style={{ backgroundColor: \"#F7F7F7\" }}>\r\n                                {/* Nội dung xem trước */}\r\n                                <Fragment>\r\n                                  <BreadCrumb\r\n                                    className=\"shadow5\"\r\n                                    title=\"Bài viết\"\r\n                                  />\r\n                                  <span className=\"space-30\" />\r\n                                  <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                      <div className=\"col-12 col-md-10 col-lg-8 m-auto\">\r\n                                        <div className=\"row\">\r\n                                          <div className=\"col-6 align-self-center\">\r\n                                            <div className=\"page_category\">\r\n                                              <h4>\r\n                                                {details.posts[0].category\r\n                                                  ? details.posts[0].category\r\n                                                  : \"Khác\"}\r\n                                              </h4>\r\n                                            </div>\r\n                                          </div>\r\n                                          <div className=\"col-6 text-right\">\r\n                                            <div className=\"page_comments\">\r\n                                              <ul className=\"inline\">\r\n                                                <li>\r\n                                                  <FontAwesome name=\"thumbs-up\" />\r\n                                                  1\r\n                                                </li>\r\n                                                <li>\r\n                                                  <FontAwesome name=\"comment\" />\r\n                                                  1\r\n                                                </li>\r\n                                                <li>\r\n                                                  <FontAwesome name=\"share\" />1\r\n                                                </li>\r\n                                              </ul>\r\n                                            </div>\r\n                                          </div>\r\n                                        </div>\r\n                                        <div className=\"space-30\" />\r\n                                        <div className=\"single_post_heading\">\r\n                                          <h1>{details.posts[0].title}</h1>\r\n                                          <div className=\"space-10\" />\r\n                                          <p>{details.posts[0].subTitle}</p>\r\n                                        </div>\r\n                                        <div className=\"space-40\" />\r\n                                        {details.posts[0].image.includes(\r\n                                          \"http\"\r\n                                        ) && (\r\n                                          <img\r\n                                            src={details.posts[0].image}\r\n                                            alt=\"thumb\"\r\n                                            style={{\r\n                                              marginLeft: \"auto\",\r\n                                              marginRight: \"auto\",\r\n                                              width: \"100%\",\r\n                                              display: \"inline-block\",\r\n                                            }}\r\n                                            class=\"img-responsive\"\r\n                                          />\r\n                                        )}\r\n                                        <div className=\"space-20\" />\r\n                                        <div className=\"row\">\r\n                                          <div className=\"col-lg-6 align-self-center\">\r\n                                            <div className=\"author\">\r\n                                              <div className=\"author_img\">\r\n                                                <div className=\"author_img_wrap\">\r\n                                                  <img\r\n                                                    src=\"https://picsum.photos/50/50\"\r\n                                                    alt=\"author\"\r\n                                                  />\r\n                                                </div>\r\n                                              </div>\r\n                                              <Link to=\"#\">\r\n                                                {\r\n                                                  JSON.parse(\r\n                                                    localStorage.getItem(\r\n                                                      \"user_info\"\r\n                                                    )\r\n                                                  ).accountInfo.username\r\n                                                }\r\n                                              </Link>\r\n                                              <ul>\r\n                                                <li>\r\n                                                  <Link to=\"#\">\r\n                                                    {moment(\r\n                                                      details.posts[0]\r\n                                                        .publicTime\r\n                                                    ).format(\"DD ,D MM YYYY\")}\r\n                                                  </Link>\r\n                                                </li>\r\n                                                <li>\r\n                                                  {details.posts[0]\r\n                                                    .updateTime &&\r\n                                                    \"cập nhật lần cuối \" +\r\n                                                      moment(\r\n                                                        details.posts[0]\r\n                                                          .updateTime\r\n                                                      )\r\n                                                        .format(\r\n                                                          \"dddd, Do MM YYYY\"\r\n                                                        )\r\n                                                        .toLocaleUpperCase()}\r\n                                                </li>\r\n                                              </ul>\r\n                                            </div>\r\n                                          </div>\r\n                                        </div>\r\n                                        <div className=\"space-20\" />\r\n                                        <div style={{ whiteSpace: \"pre-wrap\" }}>\r\n                                          <Markup\r\n                                            content={\r\n                                              details.posts[0].description\r\n                                            }\r\n                                          />\r\n                                        </div>\r\n                                        <div className=\"space-40\" />\r\n                                        <div className=\"border_black\" />\r\n                                        {/* Comment like share */}\r\n                                        <Comments className=\"comments\" />\r\n                                        <div className=\"space-60\" />\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </Fragment>\r\n                              </ModalBody>\r\n                              {details.posts[0].status !== \"Public\" && (\r\n                                <ModalFooter>\r\n                                  <Button\r\n                                    className=\"btn btn-info\"\r\n                                    onClick={() => (\r\n                                      publicPost(\r\n                                        details.posts[0].postId,\r\n                                        item.taskId\r\n                                      ),\r\n                                      setDetails(null)\r\n                                    )}\r\n                                  >\r\n                                    Đăng bài viết\r\n                                  </Button>\r\n                                </ModalFooter>\r\n                              )}\r\n                            </Modal>\r\n                          )}\r\n                        </div>\r\n                      </Col>\r\n                    </FormGroup>\r\n                  )}\r\n                </Col>\r\n              </Row>\r\n            </ModalBody>\r\n          </>\r\n        ) : (\r\n          <Row className=\"d-flex justify-content-center\">\r\n            <div class=\"spinner-border text-primary mb-5 mt-5\" role=\"status\">\r\n              <span class=\"sr-only\">Loading...</span>\r\n            </div>\r\n          </Row>\r\n        )}\r\n      </Modal>\r\n      <Draggable draggableId={item.taskId} index={index}>\r\n        {(provided, snapshot) => {\r\n          return (\r\n            <DragItem\r\n              ref={provided.innerRef}\r\n              snapshot={snapshot}\r\n              {...provided.draggableProps}\r\n              {...provided.dragHandleProps}\r\n              onClick={() => viewDetails(item.taskId)}\r\n            >\r\n              <CardHeader\r\n                style={{\r\n                  textOverflow: \"ellipsis\",\r\n                  whiteSpace: \"nowrap\",\r\n                  maxWidth: \"20rem\",\r\n                  overflow: \"hidden\",\r\n                }}\r\n              >\r\n                {item.description}\r\n              </CardHeader>\r\n              <CardBody style={{ padding: \"0.5rem\" }}>\r\n                <div>\r\n                  <i class=\"font-weight-bold\">Hạn chót: </i>{\" \"}\r\n                  <span style={{ textTransform: \"capitalize\" }}>\r\n                    {moment(item.deadLineTime).format(\r\n                      \"dddd, Do MMMM YYYY, h:mm:ss\"\r\n                    )}\r\n                  </span>\r\n                </div>\r\n                <div>\r\n                  {moment\r\n                    .duration(moment(item.deadLineTime).diff(moment()))\r\n                    .asDays() > 1 ? (\r\n                    <Badge bg=\"success \">\r\n                      Còn:{\" \"}\r\n                      {Math.abs(\r\n                        Math.floor(\r\n                          moment\r\n                            .duration(moment(item.deadLineTime).diff(moment()))\r\n                            .asDays()\r\n                        )\r\n                      )}{\" \"}\r\n                      ngày\r\n                    </Badge>\r\n                  ) : moment\r\n                      .duration(moment(item.deadLineTime).diff(moment()))\r\n                      .asHours() > 1 ? (\r\n                    <Badge bg=\"success\">\r\n                      Còn:{\" \"}\r\n                      {Math.abs(\r\n                        Math.floor(\r\n                          moment\r\n                            .duration(moment(item.deadLineTime).diff(moment()))\r\n                            .asHours()\r\n                        )\r\n                      )}{\" \"}\r\n                      giờ\r\n                    </Badge>\r\n                  ) : moment\r\n                      .duration(moment(item.deadLineTime).diff(moment()))\r\n                      .asMinutes() > 1 ? (\r\n                    <Badge bg=\"success\">\r\n                      Còn:{\" \"}\r\n                      {Math.abs(\r\n                        Math.floor(\r\n                          moment\r\n                            .duration(moment(item.deadLineTime).diff(moment()))\r\n                            .asMinutes()\r\n                        )\r\n                      )}{\" \"}\r\n                      phút\r\n                    </Badge>\r\n                  ) : moment\r\n                      .duration(moment(item.deadLineTime).diff(moment()))\r\n                      .asSeconds() > 1 ? (\r\n                    <Badge bg=\"success\">\r\n                      Còn:{\" \"}\r\n                      {Math.abs(\r\n                        Math.floor(\r\n                          moment\r\n                            .duration(moment(item.deadLineTime).diff(moment()))\r\n                            .asSeconds()\r\n                        )\r\n                      )}{\" \"}\r\n                      giây\r\n                    </Badge>\r\n                  ) : moment\r\n                      .duration(moment(item.deadLineTime).diff(moment()))\r\n                      .asDays() < -1 ? (\r\n                    <Badge bg=\"danger\">\r\n                      Trễ:{\" \"}\r\n                      {Math.abs(\r\n                        Math.floor(\r\n                          moment\r\n                            .duration(moment(item.deadLineTime).diff(moment()))\r\n                            .asDays()\r\n                        )\r\n                      )}{\" \"}\r\n                      ngày\r\n                    </Badge>\r\n                  ) : moment\r\n                      .duration(moment(item.deadLineTime).diff(moment()))\r\n                      .asHours() < -1 ? (\r\n                    <Badge bg=\"danger\">\r\n                      Trễ:{\" \"}\r\n                      {Math.abs(\r\n                        Math.floor(\r\n                          moment\r\n                            .duration(moment(item.deadLineTime).diff(moment()))\r\n                            .asHours()\r\n                        )\r\n                      )}{\" \"}\r\n                      giờ\r\n                    </Badge>\r\n                  ) : moment\r\n                      .duration(moment(item.deadLineTime).diff(moment()))\r\n                      .asMinutes() < -1 ? (\r\n                    <Badge bg=\"danger\">\r\n                      Trễ:{\" \"}\r\n                      {Math.abs(\r\n                        Math.floor(\r\n                          moment\r\n                            .duration(moment(item.deadLineTime).diff(moment()))\r\n                            .asMinutes()\r\n                        )\r\n                      )}{\" \"}\r\n                      phút\r\n                    </Badge>\r\n                  ) : moment\r\n                      .duration(moment(item.deadLineTime).diff(moment()))\r\n                      .asSeconds() < -1 ? (\r\n                    <Badge bg=\"danger\">\r\n                      Trễ:{\" \"}\r\n                      {Math.abs(\r\n                        Math.floor(\r\n                          moment\r\n                            .duration(moment(item.deadLineTime).diff(moment()))\r\n                            .asSeconds()\r\n                        )\r\n                      )}{\" \"}\r\n                      giây\r\n                    </Badge>\r\n                  ) : null}\r\n                </div>\r\n              </CardBody>\r\n              <CardFooter>\r\n                <Author>\r\n                  <LetteredAvatar\r\n                    name={item.editorId}\r\n                    size={25}\r\n                    radius={100}\r\n                    color=\"#fff\"\r\n                    backgroundColor=\"#1b7ced\"\r\n                  />\r\n                  <span> {item.editorId}</span>\r\n                </Author>\r\n                {item.posts.length !== 0 &&\r\n                  (item.posts[0].status === \"Public\" ? (\r\n                    <span>\r\n                      <Badge bg=\"success\">\r\n                        Bài viết đã đăng <i className=\"fa fa-check\" />\r\n                      </Badge>\r\n                    </span>\r\n                  ) : item.posts[0].status === \"Hidden\" ? (\r\n                    <span>\r\n                      <Badge bg=\"info\">\r\n                        Bài viết đã duyệt <i className=\"fa fa-exclamation\" />\r\n                      </Badge>\r\n                    </span>\r\n                  ) : (\r\n                    <span>\r\n                      <Badge bg=\"warning\">\r\n                        Bài viết chưa duyệt <i className=\"fa fa-exclamation\" />\r\n                      </Badge>\r\n                    </span>\r\n                  ))}\r\n              </CardFooter>\r\n            </DragItem>\r\n          );\r\n        }}\r\n      </Draggable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListItem;\r\n","import { Droppable } from \"react-beautiful-dnd\";\r\nimport ListItem from \"./ListItem\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { CSmartTable } from \"@coreui/react-pro\";\r\nimport {\r\n  Badge,\r\n  Button,\r\n  Col,\r\n  FormGroup,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport { toast } from \"react-toastify\";\r\nimport { DatetimePickerTrigger } from \"rc-datetime-picker\";\r\nimport * as moment from \"moment\";\r\nimport reportApi from \"../../../../../api/reportApi\";\r\nimport { Markup } from \"interweave\";\r\nimport Select from \"react-select\";\r\nimport userApi from \"../../../../../api/UserApi\";\r\nimport taskApi from \"../../../../../api/TaskApi\";\r\nimport { PseudoText } from \"../../../../UserViews/Post/components/styles\";\r\nimport { CFormTextarea } from \"@coreui/react-pro\";\r\nimport { useRanger } from \"react-ranger\";\r\nimport { ImgUpload, UploadContainer } from \"../../../Posts/CreatePost\";\r\nimport categoryApi from \"../../../../../api/categoryApi\";\r\nconst MIN_LENGTH_DESCRIPTION = 10;\r\nconst MAX_LENGTH_DESCRIPTION = 300;\r\nexport const Track = styled(\"div\")`\r\n  display: inline-block;\r\n  height: 8px;\r\n  width: 100%;\r\n  margin: 5% 1% 10% 1%;\r\n  padding-top: 0.25rem;\r\n`;\r\n\r\nexport const Tick = styled.div`\r\n  :before {\r\n    content: \"\";\r\n    position: absolute;\r\n    left: 0;\r\n    background: rgba(0, 0, 0, 0.2);\r\n    height: 5px;\r\n    width: 2px;\r\n    transform: translate(-50%, 0.7rem);\r\n  }\r\n`;\r\nexport const Checkbutton = styled.button`\r\n  float: right;\r\n  z-index: 9999;\r\n  display: inline;\r\n  margin-top: 0.5rem;\r\n  padding: auto;\r\n  hover: {\r\n    cursor: pointer;\r\n  }\r\n  color: white;\r\n  background-color: #4caf50 !important;\r\n  border-radius: 5px;\r\n  padding: 2px;\r\n  icon {\r\n    color: white;\r\n    background-color: #4caf50;\r\n    border-radius: 5px;\r\n    padding: 2px;\r\n  }\r\n  :hover icon {\r\n    cursor: pointer;\r\n    transition: 0.9s;\r\n    transform: rotateZ(360deg);\r\n  }\r\n  :hover span {\r\n    display: none;\r\n  }\r\n  :hover {\r\n    border-radius: 5px;\r\n  }\r\n  :hover:before {\r\n    font-weight: bold;\r\n  }\r\n  font-size: 10px;\r\n  border: none;\r\n  background-color: transparent;\r\n`;\r\n\r\nexport const TickLabel = styled.div`\r\n  position: absolute;\r\n  font-size: 0.6rem;\r\n  color: rgba(0, 0, 0, 0.5);\r\n  top: 100%;\r\n  transform: translate(-50%, 1.2rem);\r\n  white-space: nowrap;\r\n`;\r\n\r\nexport const Segment = styled.div`\r\n  background: ${(props) =>\r\n    props.index === 0\r\n      ? \"#3e8aff\"\r\n      : props.index === 1\r\n      ? \"#00d5c0\"\r\n      : props.index === 2\r\n      ? \"#f5c200\"\r\n      : \"#ff6050\"};\r\n  height: 100%;\r\n`;\r\n\r\nexport const Handle = styled.div`\r\n  background: #ff1a6b;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 1.6rem;\r\n  height: 1.6rem;\r\n  border-radius: 100%;\r\n  font-size: 0.7rem;\r\n  white-space: nowrap;\r\n  color: white;\r\n  font-weight: ${(props) => (props.active ? \"bold\" : \"normal\")};\r\n  transform: ${(props) =>\r\n    props.active ? \"translateY(-10%) scale(1.1)\" : \"translateY(0) scale(0.9)\"};\r\n  transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);\r\n`;\r\nconst ColumnHeader = styled.div`\r\n  text-transform: uppercase;\r\n  margin-top: 10px;\r\n  margin-bottom: 0.5rem;\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n`;\r\nconst StatusColumn = styled.div`\r\n  max-height: 80vh;\r\n  height: 80vh;\r\n  padding: 5px;\r\n  border-radius: 5px;\r\n  background: #ebe8e8;\r\n  box-shadow: 0px 0px 3px #ebe8e8;\r\n`;\r\nconst DroppableStyles = styled.div`\r\n  max-height: 80vh;\r\n  overflow: auto;\r\n  border-radius: 5px;\r\n  background: #ebe8e8;\r\n  box-shadow: 0px 0px 3px #ebe8e8;\r\n`;\r\nconst CreateTaskButton = styled.div`\r\n  width: 100%;\r\n  background-color: #ffffff;\r\n  padding: 0.5rem;\r\n  margin-bottom: 0.5rem;\r\n  border-radius: 6px;\r\n  font-weight: 800;\r\n  box-shadow: 0px 0px 8px #ffffff;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\nconst EmptyList = styled.div`\r\n  width: 100%;\r\n  background-color: transparent;\r\n  min-height: 10rem;\r\n`;\r\nconst statusName = (status) => {\r\n  switch (status) {\r\n    case \"New\":\r\n      return \"Mới\";\r\n    case \"Pending\":\r\n      return \"Đang làm\";\r\n    case \"Review\":\r\n      return \"Đang xem xét\";\r\n    case \"Finish\":\r\n      return \"Đã hoàn thành\";\r\n    case \"UnFinished\":\r\n      return \"Chưa xong\";\r\n  }\r\n};\r\nconst columns = [\r\n  {\r\n    key: \"index\",\r\n    label: \"STT\",\r\n    filter: false,\r\n    sorter: false,\r\n    _style: { width: \"2%\" },\r\n    _props: { className: \"fw-semibold\" },\r\n  },\r\n  {\r\n    key: \"location\",\r\n    label: \"Vị trí\",\r\n    _style: { width: \"20%\" },\r\n    _props: { className: \"fw-semibold\" },\r\n  },\r\n  {\r\n    key: \"description\",\r\n    label: \"Nội dung\",\r\n    _style: { width: \"20%\" },\r\n    _props: { className: \"fw-semibold\" },\r\n  },\r\n  {\r\n    key: \"show_details\",\r\n    label: \"Chi tiết\",\r\n    _style: { width: \"10%\" },\r\n    filter: false,\r\n    sorter: false,\r\n    _props: { className: \"fw-semibold\" },\r\n  },\r\n];\r\n\r\nconst shortcuts = {\r\n  Today: moment(),\r\n  Yesterday: moment().subtract(1, \"days\"),\r\n  Clear: \"\",\r\n};\r\nconst DraggableTask = ({ prefix, tasks, id, loadTask }) => {\r\n  const [visibleModal, setVisibleModal] = useState(false);\r\n  const [visibleModal2, setVisibleModal2] = useState(false);\r\n  const [visibleModal3, setVisibleModal3] = useState(false);\r\n  //data\r\n  const [selected, setSelected] = useState(\"\");\r\n  const [time, setTime] = useState(moment());\r\n  const [reportIdList, setReportIdList] = useState([]);\r\n  const [categoryList, setCategoryList] = useState([]);\r\n  //\r\n  const [reports, setReports] = useState();\r\n  const [details, setDetails] = useState(null);\r\n  const [editors, setEditors] = useState([]);\r\n  const [editedDescription, setEditedDescription] = useState(null);\r\n  //\r\n  const [description, setDescription] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  //\r\n  const [values, setValues] = useState([50]);\r\n  const { getTrackProps, ticks, segments, handles } = useRanger({\r\n    min: 0,\r\n    max: 100,\r\n    stepSize: 1,\r\n    values,\r\n    onChange: setValues,\r\n  });\r\n  async function loadCategory() {\r\n    try {\r\n      const params = {};\r\n      const response = await categoryApi.getAllSub(params);\r\n      setCategoryList(response);\r\n    } catch (e) {\r\n      toast.error(e.message);\r\n    }\r\n  }\r\n  async function autoReviewTask() {\r\n    try {\r\n      const params = { percent: values[0] / 100 };\r\n      console.log(params);\r\n      const response = await taskApi.taskReviewFilter(params);\r\n      if (!JSON.stringify(response).includes(\"error\")) {\r\n        //do something\r\n        toast.success(response.message);\r\n      } else {\r\n        toast.error(response.error.message);\r\n      }\r\n    } catch (e) {\r\n      toast.error(\"Error: \" + e.message);\r\n    }\r\n  }\r\n  async function loadEditors() {\r\n    try {\r\n      const params = {};\r\n      const response = await userApi.getAll(params);\r\n      response\r\n        .filter((user) => user.role.roleId === 3)\r\n        .map((editor) => {\r\n          editors.push({\r\n            specializeNavigation:\r\n              editor.accountInfo.specializeNavigation === undefined\r\n                ? \"Không có\"\r\n                : editor.accountInfo.specializeNavigation,\r\n            workLoad: editor.accountInfo.workLoad,\r\n            value: editor.email,\r\n            label: (\r\n              <div className=\"d-flex justify-content-between text-center\">\r\n                <span>{editor.accountInfo.username}</span>\r\n                <Badge pill color=\"danger\" style={{ paddingTop: \"4px\" }}>\r\n                  Task đang làm: {editor.accountInfo.workLoad}\r\n                </Badge>\r\n                <Badge pill color=\"success\" style={{ paddingTop: \"4px\" }}>\r\n                  Chuyên môn:{\" \"}\r\n                  {editor.accountInfo.specializeNavigation === null\r\n                    ? \"Không có\"\r\n                    : editor.accountInfo.specializeNavigation.type === null\r\n                    ? \"Không có\"\r\n                    : editor.accountInfo.specializeNavigation.type}\r\n                </Badge>\r\n              </div>\r\n            ),\r\n          });\r\n        });\r\n    } catch (e) {\r\n      toast.error(e.message);\r\n    }\r\n  }\r\n  async function loadReports() {\r\n    try {\r\n      const params = { status: 3 };\r\n      const response = await reportApi.getByStatus(params);\r\n      //Lọc báo cáo đã được viết thành bài\r\n      setReports(response.filter((report) => report.editorId === null));\r\n    } catch (e) {\r\n      toast.error(e.message);\r\n    }\r\n  }\r\n  const toggleDetails = async (id) => {\r\n    setVisibleModal3(!visibleModal3);\r\n    try {\r\n      const params = { id: id };\r\n      const response = await reportApi.find(params);\r\n      const metaDescription = JSON.stringify(response.description)\r\n        .replace(\r\n          \"<img\",\r\n          '<img style=\"width:55rem;height:30rem;padding-left:2rem;padding-right:2rem\"'\r\n        )\r\n        .replace(\r\n          \"<iframe\",\r\n          '<iframe style=\"width:55rem;height:30rem;padding-left:2rem;padding-right:2rem\"'\r\n        )\r\n        .replace(/\\\\/g, \"\");\r\n      const description = metaDescription.substring(\r\n        1,\r\n        metaDescription.length - 1\r\n      );\r\n      setEditedDescription(description);\r\n      setDetails(response);\r\n    } catch (e) {\r\n      toast.error(e.message);\r\n    }\r\n  };\r\n  //Tao task\r\n  const createTask = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const params = {\r\n        editorId: selected.value,\r\n        deadLineTime: time.format(\"YYYY-MM-DD HH:mm:ss\"),\r\n        description: description,\r\n        reportId: reportIdList,\r\n        boardId: id,\r\n      };\r\n      reportIdList.map(async (reportId) => {\r\n        const params = { reportID: reportId, editorID: selected.value };\r\n        console.log(params);\r\n        const response = await reportApi.updateReportEditor(params);\r\n      });\r\n      const response = await taskApi.create(params);\r\n      if (JSON.stringify(response).includes(\"taskId\")) {\r\n        setVisibleModal(false);\r\n        setEditors([]);\r\n        setIsLoading(false);\r\n        setDescription(\"\");\r\n        setReportIdList([]);\r\n        loadTask();\r\n        // window.location.reload();\r\n      } else {\r\n        setVisibleModal(false);\r\n        setEditors([]);\r\n        setIsLoading(false);\r\n        setDescription(\"\");\r\n        setReportIdList([]);\r\n        toast.error(\"Tạo thất bại\");\r\n      }\r\n    } catch (e) {\r\n      toast.error(e.message);\r\n    }\r\n  };\r\n  const openCreateModalOpen = () => {\r\n    setVisibleModal(!visibleModal);\r\n    loadEditors();\r\n  };\r\n  const openSelectReport = () => {\r\n    setVisibleModal2(!visibleModal2);\r\n    loadReports();\r\n  };\r\n  const handleMoment = (moment) => {\r\n    setTime(moment);\r\n  };\r\n  const handleDescription = (e) => {\r\n    setDescription(e.target.value);\r\n  };\r\n  const selectReport = (id) => {\r\n    reportIdList.push(id);\r\n    toggleDetails(id);\r\n  };\r\n  useEffect(() => {\r\n    loadCategory();\r\n  }, []);\r\n  return (\r\n    <StatusColumn>\r\n      <ColumnHeader>\r\n        {statusName(prefix)}{\" \"}\r\n        {prefix === \"Review\" && (\r\n          <Checkbutton onClick={() => autoReviewTask()}>Lọc nhanh</Checkbutton>\r\n        )}\r\n      </ColumnHeader>\r\n      <DroppableStyles>\r\n        <Modal\r\n          isOpen={visibleModal3}\r\n          toggle={() => (setVisibleModal3(false), setDetails(null))}\r\n          className=\"\"\r\n          size=\"lg\"\r\n          style={{ maxWidth: \"1400px\", width: \"80%\" }}\r\n        >\r\n          <ModalHeader\r\n            className=\"bg-primary\"\r\n            toggle={() => (setVisibleModal3(false), setDetails(null))}\r\n          >\r\n            Chi tiết báo cáo\r\n          </ModalHeader>\r\n          <>\r\n            <ModalBody>\r\n              {details !== null && (\r\n                <Col md={details === null ? 0 : 12}>\r\n                  <div className=\"bg-light text-dark pt-2 pl-2 pr-2 pb-5 border rounded\">\r\n                    <FormGroup row>\r\n                      <Col md=\"12\">\r\n                        <Label for=\"label\">\r\n                          <h4>Chi tiết báo cáo</h4>\r\n                        </Label>\r\n                      </Col>\r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n                      <Col md=\"3\">\r\n                        <Label for=\"location\">Địa điểm: </Label>\r\n                      </Col>\r\n                      <Col md=\"9\">{details.location}</Col>\r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n                      <Col md=\"3\">\r\n                        <Label for=\"timeFraud\">Thời gian vụ việc: </Label>\r\n                      </Col>\r\n                      <Col md=\"9\">{details.timeFraud}</Col>\r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n                      <Col md=\"3\">\r\n                        <Label for=\"createTime\">Thời gian viết: </Label>\r\n                      </Col>\r\n                      <Col md=\"9\">{details.createTime}</Col>\r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n                      <Col md=\"3\">\r\n                        <Label for=\"userId\">Người gửi: </Label>\r\n                      </Col>\r\n                      <Col md=\"9\">\r\n                        {details.userId === null ? \"Không có\" : details.userId}\r\n                      </Col>\r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n                      <Col md=\"3\">\r\n                        <Label for=\"category\">Phân loại: </Label>\r\n                      </Col>\r\n                      <Col md=\"9\">\r\n                        {details.categoryId === 1\r\n                          ? \"Khác\"\r\n                          : categoryList.find(\r\n                              (c) => c.categoryId === details.categoryId\r\n                            ).subCategory}\r\n                      </Col>\r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n                      <Col md=\"3\">\r\n                        <Label for=\"staffId\">Người xác nhận: </Label>\r\n                      </Col>\r\n                      <Col md=\"9\">{details.staffId}</Col>\r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n                      <Col md=\"3\">\r\n                        <Label for=\"description\">Chi tiết:</Label>\r\n                      </Col>\r\n                      <Col md=\"9\">\r\n                        <Markup\r\n                          content={editedDescription}\r\n                          allowAttributes\r\n                          allowElements\r\n                        />\r\n                      </Col>\r\n                    </FormGroup>\r\n                    {/* File đính kèm */}\r\n                    <FormGroup row>\r\n                      <Col md=\"12\">\r\n                        <Label for=\"description\">\r\n                          <b>Ảnh đính kèm: </b>\r\n                        </Label>\r\n                      </Col>\r\n                      {details.reportDetails.length > 0 &&\r\n                        (details.reportDetails.filter(\r\n                          (img) => img.type === \"Image\"\r\n                        ).length > 0\r\n                          ? details.reportDetails\r\n                              .filter((img) => img.type === \"Image\")\r\n                              .map((img) => (\r\n                                <>\r\n                                  <Col md=\"2\">\r\n                                    <FormGroup>\r\n                                      <UploadContainer>\r\n                                        {img.media.includes(\"http\") ? (\r\n                                          <ImgUpload preview={img.media} />\r\n                                        ) : (\r\n                                          <>\r\n                                            <ImgUpload />\r\n                                          </>\r\n                                        )}\r\n                                      </UploadContainer>\r\n                                    </FormGroup>\r\n                                  </Col>\r\n                                </>\r\n                              ))\r\n                          : \"Không có ảnh đính kèm\")}\r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n                      <Col md=\"12\">\r\n                        <Label for=\"description\">\r\n                          <b>Video đính kèm: </b>\r\n                        </Label>\r\n                      </Col>\r\n                      {details.reportDetails.length > 0 &&\r\n                        (details.reportDetails.filter(\r\n                          (video) => video.type === \"Video\"\r\n                        ).length > 0\r\n                          ? details.reportDetails\r\n                              .filter((video) => video.type === \"Video\")\r\n                              .map((video) => (\r\n                                <Col md=\"12\">\r\n                                  {video.media.includes(\"http\") ? (\r\n                                    <label for=\"videos\">\r\n                                      <video\r\n                                        width=\"400\"\r\n                                        height=\"150\"\r\n                                        controls\r\n                                        style={{\r\n                                          height: \"200px\",\r\n                                          objectFit: \"contain\",\r\n                                        }}\r\n                                        autoPlay\r\n                                        loop\r\n                                      >\r\n                                        <source src={video.media} />\r\n                                      </video>\r\n                                    </label>\r\n                                  ) : (\r\n                                    <span className=\"text-muted\">\r\n                                      Không có video\r\n                                    </span>\r\n                                  )}\r\n                                </Col>\r\n                              ))\r\n                          : \"Không có video đính kèm\")}\r\n                    </FormGroup>\r\n                    <Button\r\n                      className=\"float-right\"\r\n                      color=\"primary\"\r\n                      onClick={() => selectReport(details.reportId)}\r\n                    >\r\n                      Chọn báo cáo\r\n                    </Button>\r\n                  </div>\r\n                </Col>\r\n              )}\r\n            </ModalBody>\r\n          </>\r\n        </Modal>\r\n        <Modal\r\n          isOpen={visibleModal2}\r\n          toggle={() => setVisibleModal2(false)}\r\n          className=\"\"\r\n          size=\"lg\"\r\n          style={{ maxWidth: \"1600px\", width: \"80%\" }}\r\n        >\r\n          <ModalHeader\r\n            className=\"bg-primary\"\r\n            toggle={() => (setVisibleModal2(false), setDetails(null))}\r\n          >\r\n            Chọn báo cáo đính kèm\r\n          </ModalHeader>\r\n          <>\r\n            <ModalBody>\r\n              {reports !== null && (\r\n                <CSmartTable\r\n                  noItemsLabel=\"Đang tải danh sách báo cáo...\"\r\n                  activePage={1}\r\n                  clickableRows\r\n                  columns={columns}\r\n                  columnFilter\r\n                  columnSorter\r\n                  items={reports}\r\n                  itemsPerPageSelect\r\n                  itemsPerPage={5}\r\n                  pagination\r\n                  scopedColumns={{\r\n                    index: (item) => {\r\n                      return <td className=\"py-2\">{item._id + 1}</td>;\r\n                    },\r\n\r\n                    description: (item) => {\r\n                      return (\r\n                        <td\r\n                          className=\"py\"\r\n                          style={{\r\n                            textOverflow: \"ellipsis\",\r\n                            overflow: \"hidden\",\r\n                            whiteSpace: \"nowrap\",\r\n                            maxWidth: \"20rem\",\r\n                          }}\r\n                        >\r\n                          <Markup\r\n                            content={item.description}\r\n                            allowAttributes\r\n                            allowElements\r\n                            blockList={[\"img\", \"iframe\"]}\r\n                            noHtml={true}\r\n                          />\r\n                        </td>\r\n                      );\r\n                    },\r\n                    location: (item) => {\r\n                      return (\r\n                        <td\r\n                          className=\"py\"\r\n                          style={{\r\n                            textOverflow: \"ellipsis\",\r\n                            overflow: \"hidden\",\r\n                            whiteSpace: \"nowrap\",\r\n                            maxWidth: \"20rem\",\r\n                          }}\r\n                        >\r\n                          {item.location}\r\n                        </td>\r\n                      );\r\n                    },\r\n                    show_details: (item) => {\r\n                      return (\r\n                        <td className=\"py-2\">\r\n                          <button\r\n                            type=\"button\"\r\n                            class=\"btn btn-primary\"\r\n                            onClick={() => toggleDetails(item.reportId)}\r\n                          >\r\n                            Chi tiết\r\n                          </button>\r\n                        </td>\r\n                      );\r\n                    },\r\n                  }}\r\n                  tableProps={{\r\n                    hover: true,\r\n                  }}\r\n                />\r\n              )}\r\n            </ModalBody>\r\n          </>\r\n        </Modal>\r\n        <Modal\r\n          isOpen={visibleModal}\r\n          toggle={() => (\r\n            setVisibleModal(false),\r\n            setDetails(null),\r\n            setEditors([]),\r\n            setIsLoading(false)\r\n          )}\r\n          className=\"\"\r\n          size=\"lg\"\r\n          style={{ maxWidth: \"900px\", width: \"80%\" }}\r\n        >\r\n          <ModalHeader\r\n            className=\"bg-primary\"\r\n            toggle={() => (\r\n              setVisibleModal(false),\r\n              setDetails(null),\r\n              setEditors([]),\r\n              setIsLoading(false)\r\n            )}\r\n          >\r\n            Tạo công việc\r\n          </ModalHeader>\r\n          <>\r\n            <ModalBody>\r\n              <Row>\r\n                <Col md={details === null ? 12 : 0}>\r\n                  <FormGroup row>\r\n                    <Col md=\"2\">\r\n                      <Label for=\"file\">\r\n                        <b>\r\n                          Miêu tả công việc:\r\n                          <span style={{ color: \"red\" }}>*</span>\r\n                        </b>{\" \"}\r\n                      </Label>\r\n                    </Col>\r\n                    <Col md=\"9\">\r\n                      <div className=\"row pl-3\">\r\n                        <CFormTextarea\r\n                          rows=\"2\"\r\n                          className=\"pr-3\"\r\n                          type=\"text\"\r\n                          id=\"description\"\r\n                          value={description}\r\n                          onChange={handleDescription}\r\n                          placeholder=\"Chi tiết công việc...\"\r\n                          minLength={MIN_LENGTH_DESCRIPTION}\r\n                          maxLength={MAX_LENGTH_DESCRIPTION}\r\n                        />\r\n                        <PseudoText>\r\n                          {description.length}/{MAX_LENGTH_DESCRIPTION}\r\n                        </PseudoText>\r\n                      </div>\r\n                    </Col>\r\n                  </FormGroup>\r\n                  <FormGroup row>\r\n                    <Col md=\"2\">\r\n                      <Label for=\"file\">\r\n                        <b>\r\n                          Người đảm nhận:<span style={{ color: \"red\" }}>*</span>\r\n                        </b>{\" \"}\r\n                      </Label>\r\n                    </Col>\r\n                    <Col md=\"9\">\r\n                      <Select\r\n                        name=\"editorId\"\r\n                        // isDisabled={editors.length !== 0}\r\n                        options={editors}\r\n                        onChange={(option) => setSelected(option)}\r\n                        placeholder=\"Chọn người đảm nhận công việc\"\r\n                        defaultValue={selected}\r\n                      />\r\n                    </Col>\r\n                  </FormGroup>\r\n                  <FormGroup row>\r\n                    <Col md=\"2\">\r\n                      <Label for=\"file\">\r\n                        <b>\r\n                          Chọn deadline:<span style={{ color: \"red\" }}>*</span>\r\n                        </b>{\" \"}\r\n                      </Label>\r\n                    </Col>\r\n                    <Col md=\"10\">\r\n                      <DatetimePickerTrigger\r\n                        shortcuts={shortcuts}\r\n                        moment={time}\r\n                        onChange={handleMoment}\r\n                        minDate={moment()}\r\n                      >\r\n                        <Row>\r\n                          <Col md=\"6\">\r\n                            <input\r\n                              className=\"pt-1 pb-1\"\r\n                              type=\"text\"\r\n                              value={time.format(\"YYYY-MM-DD HH:mm\")}\r\n                              readOnly\r\n                            />\r\n                          </Col>\r\n                          <Col md=\"6\">\r\n                            <i className=\"icon-calendar p-2 ml-2 border\" />\r\n                          </Col>\r\n                        </Row>\r\n                      </DatetimePickerTrigger>\r\n                    </Col>\r\n                  </FormGroup>\r\n                  <FormGroup row>\r\n                    <Col md=\"2\">\r\n                      <Label for=\"file\">\r\n                        <b>Báo cáo đính kèm:</b>\r\n                      </Label>\r\n                    </Col>\r\n                    <Col md=\"10\">\r\n                      <Button\r\n                        class=\"btn btn-primary\"\r\n                        color=\"primary\"\r\n                        onClick={() => openSelectReport()}\r\n                      >\r\n                        Chọn báo cáo\r\n                      </Button>\r\n                    </Col>\r\n                    <Col md=\"12\">\r\n                      <Label for=\"file\">\r\n                        Đã chọn: {reportIdList.length} báo cáo\r\n                      </Label>\r\n                    </Col>\r\n                    <Col md=\"12\">\r\n                      <Label for=\"file\">\r\n                        {reportIdList !== null &&\r\n                          reportIdList.map((reportId) => (\r\n                            <div>\r\n                              <div className=\"badge badge-success\">\r\n                                {reportId}\r\n                              </div>\r\n                            </div>\r\n                          ))}\r\n                      </Label>\r\n                    </Col>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              {!isLoading ? (\r\n                <Button\r\n                  onClick={() => createTask()}\r\n                  color=\"primary\"\r\n                  class=\"font-weight-bold btn btn-primary\"\r\n                >\r\n                  Tạo công việc\r\n                </Button>\r\n              ) : (\r\n                <Button class=\"font-weight-bold btn btn-primary\">\r\n                  <span\r\n                    class=\"spinner-border spinner-border-sm\"\r\n                    role=\"status\"\r\n                    aria-hidden=\"true\"\r\n                  ></span>{\" \"}\r\n                  Đang tạo công việc\r\n                </Button>\r\n              )}\r\n            </ModalFooter>\r\n          </>\r\n        </Modal>\r\n\r\n        {prefix === \"New\" && (\r\n          <CreateTaskButton onClick={() => openCreateModalOpen()}>\r\n            <icon className=\"fa fa-plus\"></icon> Tạo công việc mới\r\n          </CreateTaskButton>\r\n        )}\r\n        {prefix === \"Review\" && (\r\n          <Row style={{ maxWidth: \"16vw\", marginLeft: \"0.25rem\" }}>\r\n            <Col md={12}>\r\n              <Track {...getTrackProps()}>\r\n                {ticks.map(({ value, getTickProps }) => (\r\n                  <Tick {...getTickProps()}>\r\n                    <TickLabel>{value}</TickLabel>\r\n                  </Tick>\r\n                ))}\r\n                {segments.map(({ getSegmentProps }, i) => (\r\n                  <Segment {...getSegmentProps()} index={i} />\r\n                ))}\r\n                {handles.map(({ value, active, getHandleProps }) => (\r\n                  <button\r\n                    {...getHandleProps({\r\n                      style: {\r\n                        appearance: \"none\",\r\n                        border: \"none\",\r\n                        background: \"transparent\",\r\n                        outline: \"none\",\r\n                      },\r\n                    })}\r\n                  >\r\n                    <Handle active={active}>{value}</Handle>\r\n                  </button>\r\n                ))}\r\n              </Track>\r\n            </Col>\r\n          </Row>\r\n        )}\r\n        <Droppable droppableId={`${prefix}`}>\r\n          {(provided) => (\r\n            <div {...provided.droppableProps} ref={provided.innerRef}>\r\n              {tasks.filter((task) => task.status === prefix).length === 0 ? (\r\n                <EmptyList />\r\n              ) : (\r\n                tasks.map(\r\n                  (item, index) =>\r\n                    item.status === prefix && (\r\n                      <ListItem\r\n                        loadTask={loadTask}\r\n                        key={item.id}\r\n                        item={item}\r\n                        index={index}\r\n                      />\r\n                    )\r\n                )\r\n              )}\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </DroppableStyles>\r\n    </StatusColumn>\r\n  );\r\n};\r\n\r\nexport default DraggableTask;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\nimport DraggableTask from \"../components/EditorManagerTaskComponents/DragableTask\";\r\nimport taskApi from \"../../../../api/TaskApi\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/vi\";\r\nimport { Button, Modal, ModalBody, ModalFooter, ModalHeader } from \"reactstrap\";\r\nimport reportApi from \"../../../../api/reportApi\";\r\nimport { toast } from \"react-toastify\";\r\nconst DragDropContextContainer = styled.div`\r\n  padding: 10px;\r\n  border-radius: 6px;\r\n`;\r\n\r\nconst ListGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr;\r\n  grid-gap: 2px;\r\n`;\r\nconst statusList = [\"New\", \"Pending\", \"Review\", \"Finish\", \"UnFinished\"];\r\n\r\nfunction Tasks(props) {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [task, setTask] = useState();\r\n  const search = props.location.search;\r\n  const urlParams = new URLSearchParams(search);\r\n  const [visibleModal, setVisibleModal] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const id = urlParams.get(\"id\");\r\n  // load tasks\r\n  const loadTask = async () => {\r\n    try {\r\n      const params = { BoardId: id };\r\n      const response = await taskApi.getAll(params);\r\n      setTasks(\r\n        response\r\n          .sort((a, b) => new moment(a.createTime) - new moment(b.createTime))\r\n          .reverse()\r\n      );\r\n    } catch (e) {\r\n      toast.error(e.message);\r\n    }\r\n  };\r\n  const abortTask = async () => {\r\n    //bỏ task\r\n    const params = {\r\n      taskId: task.taskId,\r\n      status: 5,\r\n      postId: task.posts[0].postId,\r\n    };\r\n    task.reportTasks.map(async (report) => {\r\n      const params2 = { reportID: report.reportId, editorID: \"\" };\r\n      await reportApi.updateReportEditor(params2);\r\n    });\r\n    const response = await taskApi.updateStatus(params);\r\n    if (!JSON.stringify(response).includes(\"error\")) {\r\n      console.log(\"Không tạo tại task\");\r\n      loadTask();\r\n    } else {\r\n      loadTask();\r\n    }\r\n  };\r\n  const resetTask = async () => {\r\n    // Tạo mới task\r\n    setIsLoading(true);\r\n    try {\r\n      const params = {\r\n        editorId: task.editorId,\r\n        deadLineTime:\r\n          moment\r\n            .duration(moment(task.deadLineTime).diff(moment()))\r\n            .asSeconds() < -1\r\n            ? moment(task.deadLineTime, \"DD-MM-YYYY\").add(\"DD-MM-YYYY\", 7)\r\n            : task.deadLineTime,\r\n        description: task.description,\r\n        reportId: task.reportTasks.map((report) => report.reportId),\r\n        boardId: task.boardId,\r\n      };\r\n      const response = await taskApi.create(params);\r\n      if (JSON.stringify(response).includes(\"taskId\")) {\r\n        setVisibleModal(false);\r\n        setIsLoading(false);\r\n        // Bỏ task vào chưa xong\r\n        const params = {\r\n          taskId: task.taskId,\r\n          status: 5,\r\n          postId: task.posts[0].postId,\r\n        };\r\n        const response = await taskApi.updateStatus(params);\r\n        if (!JSON.stringify(response).includes(\"error\")) {\r\n          console.log(\"Bỏ task\");\r\n        }\r\n        loadTask();\r\n      } else {\r\n        loadTask();\r\n        toast.error(\"Tạo lại thất bại\");\r\n      }\r\n    } catch (e) {\r\n      toast.error(e.message);\r\n    }\r\n  };\r\n\r\n  const onDragEnd = async (result) => {\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n    try {\r\n      const params = {\r\n        taskId: result.draggableId,\r\n        status:\r\n          result.destination.droppableId === \"New\"\r\n            ? 1\r\n            : result.destination.droppableId === \"Pending\"\r\n            ? 2\r\n            : result.destination.droppableId === \"Review\"\r\n            ? 3\r\n            : result.destination.droppableId === \"Finish\"\r\n            ? 4\r\n            : result.destination.droppableId === \"UnFinished\"\r\n            ? 5\r\n            : null,\r\n        postId:\r\n          tasks\r\n            .filter((task) => task.taskId === result.draggableId)\r\n            .map((task) => task)[0].posts.length !== 0\r\n            ? tasks\r\n                .filter((task) => task.taskId === result.draggableId)\r\n                .map((task) => task)[0].posts[0].postId\r\n            : null,\r\n      };\r\n      if (result.destination.droppableId === \"UnFinished\") {\r\n        const params = { id: result.draggableId };\r\n        const response = await taskApi.getById(params);\r\n        if (!JSON.stringify(response).includes(\"error\")) {\r\n          setVisibleModal(true);\r\n          setTask(response);\r\n        }\r\n      } else {\r\n        await taskApi.updateStatus(params);\r\n      }\r\n      loadTask();\r\n    } catch (e) {\r\n      toast.error(e.message);\r\n    }\r\n  };\r\n  const [temp, setTemp] = useState(0);\r\n  useEffect(() => {\r\n    setInterval(() => {\r\n      setTemp((prevTemp) => prevTemp + 1);\r\n    }, 5000);\r\n  }, []);\r\n  useEffect(() => {\r\n    loadTask();\r\n  }, [temp]);\r\n  return (\r\n    <>\r\n      <Modal\r\n        isOpen={visibleModal}\r\n        toggle={() => (setVisibleModal(false), setIsLoading(false), setTask())}\r\n        className=\"\"\r\n        size=\"lg\"\r\n        style={{ maxWidth: \"400px\", width: \"40%\", paddingTop: \"15rem\" }}\r\n      >\r\n        <ModalHeader\r\n          className=\"bg-primary\"\r\n          toggle={() => (\r\n            setVisibleModal(false), setIsLoading(false), setTask()\r\n          )}\r\n        >\r\n          Tạo công việc\r\n        </ModalHeader>\r\n        <>\r\n          <ModalBody>\r\n            <span className=\"font-weight-bold h5\">\r\n              Bạn có muốn tạo lại task này?\r\n            </span>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button\r\n              color=\"secondary\"\r\n              onClick={() => (\r\n                setVisibleModal(false), setIsLoading(false), abortTask()\r\n              )}\r\n              class=\"font-weight-bold \"\r\n            >\r\n              Không cần\r\n            </Button>\r\n            {!isLoading ? (\r\n              <Button\r\n                color=\"info\"\r\n                onClick={() => resetTask()}\r\n                class=\"font-weight-bold\"\r\n              >\r\n                Tạo lại công việc\r\n              </Button>\r\n            ) : (\r\n              <Button class=\"font-weight-bold\">\r\n                <span\r\n                  class=\"spinner-border spinner-border-sm\"\r\n                  role=\"status\"\r\n                  aria-hidden=\"true\"\r\n                ></span>{\" \"}\r\n                Đang tạo lại công việc\r\n              </Button>\r\n            )}\r\n          </ModalFooter>\r\n        </>\r\n      </Modal>\r\n      <DragDropContextContainer>\r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n          <ListGrid>\r\n            {statusList.map((listKey) => (\r\n              <DraggableTask\r\n                loadTask={loadTask}\r\n                id={id}\r\n                tasks={tasks}\r\n                key={listKey}\r\n                prefix={listKey}\r\n              />\r\n            ))}\r\n          </ListGrid>\r\n        </DragDropContext>\r\n      </DragDropContextContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Tasks;\r\n"],"sourceRoot":""}